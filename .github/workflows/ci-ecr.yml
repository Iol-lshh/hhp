name: Docker Image CI to ECR - dev

on:
  push:
    branches: [ "step3" ]
  # pull_request:
  #   branches: [ "dev" ]

env:
  AWS_REGION: ap-northeast-2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout repository
      uses: actions/checkout@v3

    # aws 접속
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # ecr 접근
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # 스탬프
    - id: set_timestamp
      run: echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT

    # 이미지 빌드
    - name: Build the Docker image
      id: image_build
      run: docker build . --file Dockerfile --tag public.ecr.aws/j6f8n7k3/hhp-app:step3${{ steps.set_timestamp.outputs.timestamp }}
          
    # 실패 처리
    - name: Check build logs if the build fails
      if: steps.image_build.outcome != 'success'
      run: echo "빌드 실패!" && docker buildx inspect public.ecr.aws/j6f8n7k3/hhp-app:step3${{ steps.set_timestamp.outputs.timestamp }}

    # 성공 처리
    - name: Push the Docker image to ECR
      id: ci_image
      if: steps.image_build.outcome == 'success'
      run: |
        echo "image=public.ecr.aws/j6f8n7k3/hhp-app:step3${{ steps.set_timestamp.outputs.timestamp }}"
        docker push public.ecr.aws/j6f8n7k3/hhp-app:step3${{ steps.set_timestamp.outputs.timestamp }}

    # ecs 띄우기 - task 정의
    
    
    # ecs 띄우기 - 배포
    
    
