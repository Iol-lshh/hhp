name: Docker Image CI to ECR - dev

on:
  push:
    branches: [ "ch1st3" ]
  # pull_request:
  #   branches: [ "dev" ]

env:
  AWS_REGION: ap-northeast-2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout repository
      uses: actions/checkout@v3

    # aws 접속
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # ecr 접근
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # 스탬프
    - id: set_timestamp
      run: echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT

    # 이미지 빌드
    - name: Build the Docker image
      id: image_build
      run: docker build . --file Dockerfile --tag ${{ steps.login-ecr.outputs.registry }}/hhp-prod:ch1st3${{ steps.set_timestamp.outputs.timestamp }} -e USE_PROFILE=prod
          
    # 실패 처리
    - name: Check build logs if the build fails
      if: steps.image_build.outcome != 'success'
      run: echo "빌드 실패!" && docker buildx inspect ${{ steps.login-ecr.outputs.registry }}/hhp-prod:ch1st3${{ steps.set_timestamp.outputs.timestamp }}

    # 성공 처리
    - name: Push the Docker image to ECR
      id: ci_image
      if: steps.image_build.outcome == 'success'
      run: |
        echo "image=${{ steps.login-ecr.outputs.registry }}/hhp-prod:ch1st3${{ steps.set_timestamp.outputs.timestamp }}"
        docker push ${{ steps.login-ecr.outputs.registry }}/hhp-prod:ch1st3${{ steps.set_timestamp.outputs.timestamp }}

    # ecs 띄우기 - task 정의
    - name: Render ECS task-definition
      id: render-task-definition
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: arn:aws:ecs:ap-northeast-2:588630098141:task-definition/hhp-prod
        container-name: hhp-prod-service
        image: ${{ steps.login-ecr.outputs.registry }}/hhp-prod:ch1st3${{ steps.set_timestamp.outputs.timestamp }}


    # ecs 띄우기 - 배포
    - name: Deploy Amazon ECS task-definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
        cluster: cluster-hhp-prod
        service: service-hhp-prod
        wait-for-service-stability: true